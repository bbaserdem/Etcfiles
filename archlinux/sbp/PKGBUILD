# Maintainer: Batuhan Baserdem <baserdem.batuhan@gmail.com>
pkgbase='sbp'
pkgname=(
    'sbp-sys-base'
    'sbp-sys-extra'
    'sbp-sys-bios'
    'sbp-sys-uefi'
    'sbp-gui-base'
    'sbp-gui-extra'
    'sbp-gui-games'
    'sbp-gui-bspwm'
    'sbp-gui-sway'
    'sbp-cmp-laptop'
    'sbp-cmp-notebook'
    'sbp-cmp-server'
    'sbp-cmp-workstation')
pkgver=3.0
pkgrel=10
pkgdesc="Meta packages for sbp"
arch=('any')
url="https://github.com/bbaserdem/Etcfiles"
licence=(MIT)
validpgpkeys=('0B7151C823559DD8A7A04CE36426139E2F4C6CCE')
groups=('sbp')
source=(
    'base.chroot-os'
    'base.mpc-prev'
    'base.repo-build'
    'base.repo-remove'
    'base.repo-sync'
    'uefi.install'
    'uefi.kernel-hook'
    'uefi.refind-hook'
    'uefi.refind-config'
    'uefi.refind-update'
    'uefi.sb-signscript'
    'gui.xinit-session'
    'laptop.install'
    'notebook.install'
    'server.install'
    'workstation.install'
)

sha256sums=(SKIP SKIP SKIP SKIP
            SKIP SKIP SKIP SKIP
            SKIP SKIP SKIP SKIP
            SKIP SKIP SKIP SKIP)

package_sbp-sys-base() {
provides=('vim' 'vi' 'nano')
    conflicts=('vim' 'vi' 'nano')
    depends=('sbp-sys-boot')
    # Install user scripts
    install -dm 0755 "${pkgdir}/usr/bin"
    install -Dm 0755 base.chroot-os     "${pkgdir}/usr/bin/chroot-os"
    install -Dm 0755 base.mpc-prev      "${pkgdir}/usr/bin/mpc-prev"
    install -Dm 0755 base.repo-remove   "${pkgdir}/usr/bin/archrepo-remove"
    install -Dm 0755 base.repo-sync     "${pkgdir}/usr/bin/archrepo-sync"
    install -Dm 0755 base.repo-build    "${pkgdir}/usr/bin/archrepo-build"
    # Remove alternative editors
    ln -sf /usr/bin/nvim "${pkgdir}/usr/bin/vim"
    ln -sf /usr/bin/nvim "${pkgdir}/usr/bin/nano"
    ln -sf /usr/bin/nvim "${pkgdir}/usr/bin/vi"
    #-----Packages
    depends+=(      # Gentoo has: baselayout
        'coreutils'
        'wget'
        'man-pages'
        'bzip2'
        'rsync'         # Gentoo has this on system
        'which'
        'gcc' 'gcc-libs'
        'iproute2'
        'sed'
        'findutils'
        'diffutils'
        'grep'
        'iputils'
        'xz'            # Gentoo has this on system
        'autoconf'      # Gentoo has gnuconf, probably analogues
        'file'
        'psmisc'
        'patch'
        'device-mapper'
        'bash'
        'shadow'
        'procps-ng'
        'tar'
        'make'
        'gzip'
        'less'
        'pacman'
        'openssh'       # Gentoo has ssh on system
        'e2fsprogs'
        'filesystem'    # Gentoo has baselayout: probably similar
        'inetutils'     # Gentoo has net-tools
        'binutils'
        'gawk'
        'util-linux'
        'glibc'         # Gentoo has libc
        'busybox'
        'kbd'           # NON-gentoo from here
        'automake' 'gettext' 'licenses' 'man-db' 'pciutils' 'perl' 's-nail'
        'texinfo' 'usbutils' 'bison' 'fakeroot' 'flex' 'groff' 'libtool'
        'm4' 'pkgconf' )
    # Kernel and booting
    depends+=(
        'linux' 'linux-headers'
        'amd-ucode' 'intel-ucode'
        'linux-firmware'
        'dracut'
        'edk2-ovmf'
        'terminess-powerline-font-git')
    # File system stuff
    depends+=(
        'snapper'
        'parted'
        'btrfs-progs'
        'xfsprogs'
        'lvm2'
        'f2fs-tools'
        'fuse3'
        'jfsutils'
        'reiserfsprogs'
        'exfat-utils'
        'udftools'
        'udisks2')
    # Hardware
    depends+=( 
        'dmidecode'
        'hdparm'
        'i2c-tools'
        'lm_sensors'
        'lshw'
        'stress'
        'acpid'
        'cpupower'
        'powertop'
        'libinput')
    # Encryption
    depends+=(
        'pass' 'qrencode'
        'cryptsetup' 
        'gnupg'
        'openssh'
        'tor'
        'openconnect'
        'sshfs' 
        'openvpn' )
    # Network
    depends+=(
        'bind-tools'
        'openresolv'
        'nftables'
        'unbound'
        'dhcpcd'
        'cups' 'cups-pdf' 'cups-pk-helper'
        'iwd'
        'bluez' 'bluez-libs' 'bluez-utils'
        'bridge-utils' 'hostapd' )
    # Administration
    depends+=(
        'logrotate'
        'sudo'
        'dbus'
        'etckeeper'
        'mlocate'
        'pam'
        'polkit'
        'inotify-tools'
        'fcron'
        'tzupdate' )
    # Arch stuff
    depends+=(
        'archiso' 
        'asp'
        'devtools'
        'reflector'
        'aurutils'
        'pacman-contrib' 
        'archlinux-appstream-data'
        'archlinux-keyring'
        'archlinux-xdg-menu'
        'sysfsutils'
        'systemd-sysvcompat')
    # Media
    depends+=(
        'alsa-utils' 'lib32-alsa-plugins'
        'pulseaudio' 'lib32-libpulse' 'pulseaudio-alsa' 'pulseaudio-bluetooth'
        'pamixer'
        'mpc' 'mpd' 
        'cdparanoia' )
    # Applications
    depends+=(
        'atool'
        'zsh' 'grml-zsh-config' 'dash'
        'tmux'
        'htop'
        'neofetch'
        'neovim' 'python-neovim' 'python-pexpect' 'neovim-remote'
        'w3m'
        'pulsemixer'
        'vifm' )
    # Utilities
    depends+=(
        'bzip2' 'cpio' 'gzip' 'lhasa' 'lzop' 'p7zip' 'tar' 'unace' 'unrar'
        'unzip' 'xz' 'zip'
        'ctags'
        'bash-completion'
        'fzf'
        'git'
        'discount' 'jq' 'yajl'
        'msmtp'
        'xdg-user-dirs'
        'xdg-utils'
        'cmake' 'clang'
        's3cmd')
}

package_sbp-sys-extra() {
    depends=('sbp-sys-base')
    # Developement
    depends+=(
        'arm-none-eabi-gcc' 'arm-none-eabi-binutils' 'arm-none-eabi-newlib'
        'avr-binutils' 'avr-gcc' 'avr-libc' 'avrdude' 'dfu-util'
        'dfu-programmer' 'android-tools' 'android-udev' 'libmtp'
        'bpython'
        'lapack' 'openblas'
        'python-pip' 'python-pipenv' )
    # Utilities
    depends+=(
        'languagetool'
        'fluidsynth' 'lib32-fluidsynth'
        'trash-cli'
        'geoclue2'
        'imagemagick'
        )
    # Apps
    depends+=(
        'qemu'
        'abcde'
        'neomutt' 'isync' 'notmuch'
        'ncmpcpp' 'mpdscribble'
        'khal' 'khard'
        'syncthing'
        'youtube-dl'
        'newsboat'
        'todoman'
        'weechat' )
    # Other
    depends+=('private-internet-access-vpn')
}

package_sbp-sys-bios() {
    provides=('sbp-sys-boot')
    conflicts=('sbp-sys-uefi')
    depends=(
        'grub'
        'os-prober' )
}

package_sbp-sys-uefi() {
    provides=('sbp-sys-boot')
    conflicts=('sbp-sys-bios')
    install=uefi.install
    # Install refind config
    install -dm 0755 "${pkgdir}/esp"
    install -dm 0755 "${pkgdir}/esp/EFI"
    install -dm 0755 "${pkgdir}/esp/EFI/rEFInd"
    install -Dm 0755 uefi.refind-config "${pkgdir}/esp/EFI/rEFInd/refind.conf"
    # Install update hooks
    install -dm 0755 "${pkgdir}/usr"
    install -dm 0755 "${pkgdir}/usr/share"
    install -dm 0755 "${pkgdir}/usr/share/libalpm"
    install -dm 0755 "${pkgdir}/usr/share/libalpm/hooks"
    install -Dm 0755 uefi.kernel-hook   "${pkgdir}/usr/share/libalpm/hooks/99-linux-sb.hook"
    install -Dm 0755 uefi.refind-hook   "${pkgdir}/usr/share/libalpm/hooks/refind-sb.hook"
    # Install refind update script
    install -dm 0755 "${pkgdir}/usr/share/refind"
    install -Dm 0755 uefi.refind-update "${pkgdir}/usr/share/refind/update-refind.sh"
    # Install secure boot signing script
    install -dm 0755 "${pkgdir}/usr/bin"
    install -Dm 0755 uefi.sb-signscript "${pkgdir}/usr/bin/sbp-sbsign.sh"
    # Create directory for storing secure-boot keys
    install -dm 0755 "${pkgdir}/etc"
    install -dm 0755 "${pkgdir}/etc/keys"
    depends=(
        'efibootmgr'
        'efitools'
        'efivar'
        'refind-efi'
        'refind-theme-regular'
        'sbsigntools')
}

package_sbp-gui-base() {
    # Install required stuff
    install -dm 0755 "${pkgdir}/usr/share/xsessions"
    install -Dm 0755 gui.xinit-session "${pkgdir}/usr/share/xsessions/xinitrc.desktop"
    # Dependencies
    depends=('sbp-sys-base')
    # Xorg stuff
    depends+=(
        'xorg-server'
        'xorg-setxkbmap'
        'xorg-xauth'
        'xorg-xev'
        'xorg-xinit'
        'xorg-xprop'
        'xorg-xrandr'
        'xorg-xrdb'
        'xorg-xset'
        'xorg-xsetroot'
        'xorg-xwininfo'
        'xdotool'
        'xkb-switch'
        'xorgproto' 'xf86-video-vesa' 'xorg-bdftopcf' 'xorg-docs'
        'xorg-font-util' 'xorg-fonts-encodings' 'xorg-iceauth' 'xorg-luit'
        'xorg-mkfontdir' 'xorg-mkfontscale' 'xorg-server-common'
        'xorg-server-devel' 'xorg-server-xdmx' 'xorg-server-xephyr'
        'xorg-server-xnest' 'xorg-server-xvfb'  'xorg-sessreg' 
        'xorg-smproxy' 'xorg-x11perf'  'xorg-xbacklight' 'xorg-xcmsdb'
        'xorg-xcursorgen' 'xorg-xdpyinfo' 'xorg-xdriinfo' 'xorg-xgamma'
        'xorg-xhost' 'xorg-xinput' 'xorg-xkbcomp' 'xorg-xkbevd' 'xorg-xkbutils'
        'xorg-xkill' 'xorg-xlsatoms' 'xorg-xlsclients' 'xorg-xmodmap' 'xorg-xpr'
        'xorg-xrefresh'  'xorg-xvinfo' 'xorg-xwd'  'xorg-xwud'
        'xf86-input-libinput'  'xorg-fonts-misc' 'xdo'  'xsel')
    # Wayland stuff
    depends+=(
        'wayland'
        'xorg-server-xwayland')
    # Login manager
    depends+=(
        'sddm'
        'chili-sddm-theme'
        'qt5-quickcontrols2')
    # Fonts
    depends+=(
        'adobe-source-serif-pro-fonts'
        'otf-fira-code'
        'terminus-font'
        'noto-fonts-emoji'
        'termsyn-font'
        'ttf-droid'
        'ttf-inconsolata'
        'ibus' 'ibus-m17n')
    # Themes
    depends+=(
        'xcursor-comix'
        'arc-gtk-theme'
        'gnome-themes-extra'
        'kvantum-qt5' 'kvantum-theme-arc' )
    # Applications
    depends+=(
        'alacritty' 
        'blueman'
        'udiskie'
        'pavucontrol'
        'remmina' 'remmina-plugin-rdesktop'
        'spyder3'
        'imv'
        'zathura' 'zathura-cb' 'zathura-djvu' 'zathura-pdf-mupdf' 'zathura-ps'
        'smplayer'
        'qutebrowser' 'chromium-widevine' )
    # Utilities
    depends+=(
        'gtk2fontsel' 'gucharmap'
        'system-config-printer'
        'perl-image-exiftool'       # For exif data on ranger
        'python-tldextract'         # For password in qutebrowser
        'polkit-gnome'
        'freerdp'
        'mpv'
        'trezor-bridge-bin' )
    # Matlab dependencies
    depends+=(
        'gcc6'
        'gconf'
        'glu'
        'gstreamer0.10-base'
        'gtk2'
        'libunwind'
        'libxp'
        'libxp'
        'libxpm'
        'libxtst'
        'nss'
        'portaudio'
        'python2'
        'qt5-svg'
        'qt5-webkit'
        'qt5-websockets'
        'qt5-x11extras'
        'xerces-c'
        'jre8-openjdk'
        'jre10-openjdk' )
}

package_sbp-gui-extra() {
    depends=('sbp-gui-base')
    # Apps
    depends+=(
        'firefox'
        'stellarium'
        'openscad'
        'kitty' 'python-pillow'
        'inkscape'
        'gimp'
        'blender'
        'darktable'
        'audacity'
        'virt-manager'
        'picard'
        'tuxguitar'
        'zotero'
        'pdfsam'
    )
    # Documents
    depends+=(
        'texlive-fontsextra' 'texlive-latexextra' 'texlive-pictures'
        'texlive-pstricks' 'texlive-core' 'texlive-science'
        'latex-mk'
        'libreoffice-fresh')
    # Programming
    depends+=(
        'arduino'
        'arduino-avr-core'
        'octave' )
}

package_sbp-gui-games() {
    depends=('sbp-gui-base')
    # Steam
    depends+=(
        'ttf-roboto' 'steam-fonts'
        'steamos-compositor'
        'sssm' 'air-for-steam'
        'steam'
        'steam-native-runtime')
    # Wine
    depends+=(
        'wine-staging'                          # Windows compatibility
        'wine_gecko' 'wine-mono' 'lib32-libxml2' 'lib32-mpg123' 'lib32-lcms2'
        'lib32-giflib' 'lib32-libpng' 'lib32-gnutls' 'lib32-gst-plugins-base'
        'lib32-openal' 'lib32-gst-plugins-good' )
}


package_sbp-gui-bspwm() {
    depends=('sbp-gui-base')
    depends+=(
        'light'                 # Brightness controls
        'bspwm'                 # Binary split partitioning WM
        'dex'                   # Autostart launcher
        'dunst'                 # Notification daemon
        'feh'                   # Wallpaper management
        'unclutter'             # Hide mouse when idle
        'i3lock'                # Screen locker
        'maim'                  # Screenshot utility
        'polybar'               # AUR: Status bar
        'redshift'              # Screen dimmer
        'rofi'                  # Application launcher
        'sxhkd'                 # Simple X hotkey daemon
        'xfce4-power-manager'   # Battery notifications
        'xss-lock'              # Locks screen on power events
    )
}

package_sbp-gui-sway() {
    depends=('sbp-gui-base')
    depends+=(
        'light'                 # Brightness controls
        'dex'                   # Autostart launcher
        'grim'                  # Screenshot
        'i3blocks'              # Input to status-bar
        'mako'                  # Notification daemon
        'rofi'                  # App launcher
        'slurp'                 # Region selector
        'sway'                  # Wayland compositor
        'swayidle'              # Timout manager
        'swaylock'              # Screen-locker
        'wlroots'               # Wayland library
        'xfce4-power-manager'   # Battery notifications
    )
}

package_sbp-cmp-laptop() {
    provides=('sbp-cmp')
    conflicts=(
        'sbp-cmp-notebook'
        'sbp-cmp-workstation'
        'sbp-cmp-server' )
    install=laptop.install
    depends=(
        'mesa'
        'lib32-mesa'
        'mesa-demos'
        'lib32-mesa-demos' 
        'libva-mesa-driver'
        'lib32-libva-mesa-driver'
        'mesa-vdpau'
        'lib32-mesa-vdpau'
        'libva-vdpau-driver'
        'xf86-video-amdgpu'
        'vulkan-radeon'
    )
}

package_sbp-cmp-notebook() {
    provides=('sbp-cmp')
    conflicts=(
        'sbp-cmp-laptop'
        'sbp-cmp-workstation'
        'sbp-cmp-server' )
    install=notebook.install
    depends=(
        'bbswitch-dkms'
        'bumblebee'
        'cuda'
        'lib32-nvidia-utils'
        'lib32-virtualgl'
        'mesa'
        'mesa-demos'
        'nvidia-dkms'
        'nvidia-settings'
        'nvidia-utils'
        'ocl-icd'
        'opencl-nvidia'
        'primus'
    )
}

package_sbp-cmp-workstation() {
    provides=('sbp-cmp')
    conflicts=(
        'sbp-cmp-laptop'
        'sbp-cmp-notebook'
        'sbp-cmp-server' )
    install=workstation.install
    depends=(
        'dropbox'
        'ocl-icd'
        'mesa'
        'lib32-mesa'
        'xf86-video-nouveau'
    )
}

package_sbp-cmp-server() {
    provides=('sbp-cmp')
    conflicts=(
        'sbp-cmp-laptop'
        'sbp-cmp-notebook'
        'sbp-cmp-workstation' )
    install=server.install
    #depends=(
    #    'apache'            # Web server
    #    'dovecot'           # IMAP email server
    #    'kodi'              # Media file server
    #    'mariadb'           # Database management
    #    'postfix'           # Mail transfer agent
    #    'rspamd'            # Spam filter for mail
    #    'transmission-cli'  # Torrenting
    #    'radicale'          # CalDAV and CardDAV server
    #)
}
